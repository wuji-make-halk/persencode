一、选择
1. 问题:对比 C/C++,下列特性是属于 C++独有的是? () A.继承
B.封装
C.多态
D.函数定义不能嵌套
标准答案: ABC
2. 问题:在 C/C++中进行内存分配操作时候,以下描述正确的是? ()
A.malloc/free 是库函数,new/delete 是运算符
B.new/delete 不能在 C 程序上运行
C.malloc/free 是 C/C+的内存分配符,new /delete 是 C++的内存分配符
D.malloc/free,new /delete 使用时候都要成对出现。
标准答案: ABCD
3. 问题:以下关于目标文件 (.o 和可执行程序结构相关描述,正确的是? A.目标文件是由每一个 C/C++语言源程序经过编译器生成 ,目标文件(.o 的主要组成部分即 代码段、只读数据段和读写数据段三个段。 B.未初始化数据段、堆和栈可能都会占用目标文件的空间。 C.可执行程序是由各个目标文件经过连接而成 ,其主体部分依然是代码段 、只读数据段和读 写数据段。
D.在源程序其他部分不变的情况下,把全局变量定义 “static char rw_data[1024];” 修改为 “static char rw_data[1024]={0};”后,会导致最终可执行程序文件变
标准答案: ACD
4. 问题:以下可以做到两个进程之间数据通信的有 ()
A.消息队列
B.共享内存
C.文件
D.socket
标准答案: ABCD
5. 问题:以下可以定义用户标识符是()
A.Scanf
B.Void
C._3com
D.int 大
标准答案: ABC
6. 问题:以下叙述中正确的是 ()
A.变量的作用域取决于变量定义语句出现的位置 B.同一程序中,全局变量的作用域一定比局部变量的作用域大 C.局部变量的作用域是在定义它的函数体内 D.全局变量的作用域是从定义位置开始至源文件结束
标准答案: ACD
7. 问题:以下关于 c 语言标识符的描述中,不正确的是 :()
A.标识符可以由汉字组成 B.标识符只能以字母开头 C.关键字可以作为用户标识符
D.IF 可以作为用户定义的合法标识符 标准答案: ABC
8. 问题:下面那几个运算符是对位进行操作的。 () A.&
B.^
C.~
D.<<
标准答案: ABCD
9. 问题:以下正确的叙述是 。()
A.在 C 程序中,逗号运算符的优先级最低
B.在 C 程序中,APH 和 aph 是两个不同的变量
C.若 a 和 b 类型相同,在执行了赋值表达式 a=b 后 b 中的值将放人 a 中,而 b 中的 值不变。 D.当从键盘输入数据时 ,对于整型变量只能输入整型数值 ,对于实型变量只能输入实型数值 标准答案: ABC
10. 问题:下关于运算符优先顺序的描述中不正确的是。 () A.关系运算符<算术运算符<赋值运算符<逻辑与运算符
B.逻辑 运算符< 关系运算符< 算术运算符< 赋值运算符
C.赋值运算符< 逻辑与运算符< 关系运算符< 算术运算符
D.算术运算符< 关系运算符< 赋值运算符< 逻辑与运算符
标准答案: ABD
11. 问题:下面关于枚举类型的说法正确的是 。() A.枚举值是常量,不能在程序中用赋值语句再对它赋值 ; B.只能把枚举值赋予枚举变量,不能把元素的数值直接赋予枚举变量 C.把数值直接赋予枚举变量最好用强制类型转换 ;
D.枚举元素不是字符常量而是字符串常量
标准答案: ABC
12. 问题:下面关于枚举类型的说法正确的是 。()
A.可以为枚举元素赋值
B.枚举元素可以进行比较
C.枚举元素的值可以在类型定义时指定;
D.枚举元素可以作为常量使用
标准答案: BCD
13. 问题:下面关于 volatile 变量的说法正确的是。() A.并行设备的硬件寄存器(如:状态寄存器; B.一个中断服务子程序中会访问到的非自动变量 (也就是全局变量) C.会被几个任务共享的变量
D.定时器变量
标准答案: ABC
14. 问题:下面关于联合类型说法正确的是() A.对联合变量的赋值、使用都只能是对变量的成员进行
B.联合变量的成员表示为: 联合变量名.成员名
C.可以对联合变量作初始化赋值。 D.一个联合变量,每次只能赋予一个成员值
标准答案: ABCD
15. 问题:下面关于结构类型的说法正确的是() A.结构是一种复合数据类型,其构成元素既只能是基本数据类型(如 变量)
int、long、float 等的
B.缺省条件下,编译器为结构的每个成员按其自然对界( alignment 条件分配空间); C.结构成员按照它们被声明的顺序在内存中顺序存储; D.结构第一个成员的地址和整个结构的地址相同
标准答案: BCD
16. 问题:下面关于结构类型的说法正确的是()
A.对于结构变量,可以通过运算符 "."或"->",逐个访问其成员; B.结构变量和结构变量成员的地址都可以被引用;
C.如果指针变量 p 已指向某结构数组,则 p+1 指向当前元素的下一个成员; D.如果指针变量 p 已经指向一个结构变量(或结构数组,就不能再使之指向结构变量(或结 构数组元素的某一成员 )。
标准答案: ABD
17. 问题:以下叙述中正确的是 ()
A.表达式 a&=b 等价于 a=a&b
B.表达式 a|=b 等价于 a=a|b
C.表达式 a!=b 等价于 a=a!b
D.表达式 a^=b 等价于 a=a^b
标准答案: ABD
18. 问题:对于以下的变量定义,表达式 ______不符合 C 语言语法。 () A.p->pk
B.*p.pk
C.*p->pk
D.*x.pk
标准答案: BCD
19. 问题:若变量已被正确定义,下列可作为 C 语言赋值语句的是() A.x=3,y=5
B.a=b=6
C.i--
D.y=int(x )
标准答案: ABCD
20. 问题:下列语句中,句法正确的是(不考虑语义 )()
A.while(x=y5;
B.do x++ while(x==10 ;
C.while(0;
D.do 2;while(a==b;
标准答案: ACD
21. 问题:以下叙述错误的是。 ()
A.continue 语句的作用是结束整个循环的执行
B.只能在循环体内和 switB h 语句体内使用 break 语句
C.在循环体内使用 break 语句或 continue 语句的作用相同 D.从多层循环嵌套中退出时,只能使用 goto 语句 标准答案: ACD
22. 问题:对下面程序段 ,描述错误的是。
int x; for(t=1;t<=100;t++ { scanf("%d",&x; if (x<0 continue;
printf("%d\n",t;
} ()
A.当 x<0 时,整个循环结束
B.当 x>=0 时,什么也不输出
C.printf 函数永远也不执行
D.最多允许输出 100 个非负整数
标准答案: ABC
23. 问题:具有相同类型的指针类型变量 p 与数组 a,可以进行的操作是 ()
A.p=a;
B.*p=a[0];
C.p=&a[0];
D.p=&a;
标准答案: ABC
24. 问题:定义由 n 个指向整形数据的指针组成的数组 p,其不正确的方式为 ()
A.int p;
B.int (*p[n];
C.int *p[n];
D.int (*p( ;
标准答案: ABD
25. 问题:有定义语句:inta[]={1,2,3,4,5,6,7},*p=a,*q=&a[5]; 则下列表达式中值等于 5 的是:
()
A.*q--
B.*--q
C.--*q
D.q-p
标准答案: BCD
26. 问题:下面描述中,错误的是()
A.在基类定义的 public 成员在公有继承的派生类中可见,也能在类外被访问 B.在基类定义的 publiB 和 proteB ted 成员在私有继承的派生类中可见,在类外可以被访问 C.在基类定义的 public 和 protected 成员在保护继承的派生类中不可见 D.在派生类中不可见的成员要变成可访问的需进行访问声明
标准答案: BC
27. 问题:下列的各类函数中,是类的成员函数 。() A.构造函数
B.析构函数
C.友元函数
D.拷贝初始化构造函数
标准答案: ABD
28. 问题:下面描述中,表达正确的是 :()
A.公有继承时,基类中的 public 成员在派生类中仍是 public 的 B.公有继承时,基类中的 private 成员在派生类中仍是 private 的 C.公有继承时,基类中的 protected 成员在派生类中仍是 protected 的 D.私有继承时,基类中的 public 成员在派生类中是 private 的
标准答案: ACD
29. 问题:关于 this 指针的说法错误的是()
A.this 指针必须显式说明
B.当创建一个对象后,this 指针就指向该对象
C.成员函数拥有 this 指针
D.静态成员函数拥有 this 指针
标准答案: AD
30. 问题:对静态成员的不正确描述是() A.静态成员不属于对象,是类的共享成员 B.静态数据成员要在类外定义和初始化 C.调用静态成员函数时要通过类或对象激活,所以静态成员函数拥有 this指针 D.只有静态成员函数可以操作静态数据成员
标准答案: CD
31. 问题:在 c++中,不能被派生类继承的函数是()
A.成员函数
B.构造函数
C.析构函数
D.静态成员函数
标准答案: BC
32. 问题:下列说法哪些是对的()
A.类的 static 成员不占用类对象空间
B.类的成员函数不占用类的对象空间
C.当 new 一个对象失败时,得到 NULL 指针 D.类的缺省构造函数会用相关类型的缺省值初始化每个数据成员
标准答案: AB
33. 问题:下列那些类需要显示提供拷贝构造函数()
A.含有四个 float 成员的 Point3w 类
B.matrix 类其中实际的矩阵是在构造函数中动态分配的在析构函数中删除的 C.payroll 类其中为每个对象提供一个惟一的 ID
D.word 类含有一个 string 对象和行列位置对的 vector 对象
标准答案: BC
34. 问题:
以下代码的运行的结果是()
class Obj
{
public:
Obj(
} ~Obj( {
} };
class Base {
public:
Base( {
cout<<"Obj("<<endl;
cout<<"~Obj("<<endl;
{
cout<<"Base("<<endl;
} ~Base( {
} private:
Obj obj; };
int main( {
Base b;
return 0; }
A.Obj(
Base(
~Obj(
~Base(
B. Obj(
Base(
~Base(
~Obj(
C.Base(
Obj(
~Base(
~Obj( D.以上答案都不正确 标准答案: B
35. 问题:()
cout<<"~Base("<<endl;
假设有类
class A { public:
A(const char *p {
_str=new char[1024];
strcpy(_str,p; }
private: char *_str;
};
另外有个 vector<A>,下列说法那个是对的 ()
A.类 A 必须提供拷贝构造函数和重载赋值操作符,否则有内存泄漏 B.类 A 必须提供拷贝构造函数,不必重载赋值操作符,否则有内存泄漏 C.类 A 必须重载赋值操作符,不必提供拷贝构造函数,否则有内存泄漏 D.以上答案都不正确
标准答案: A
36. 问题:以下说法,那些是对的()
A.运行结果为:输出 10
B.运行结果为:输出 100
C.程序会 CORE
D.程序有内存泄漏
标准答案: AD
37. 问题:以下那些代码会得到最大的 int 数()
A.int i=1;
B.int i=-1;
C.i=1;
i=i<<(sizeof(int*8-1;
i=i^-1;
D.以上答案都不对
标准答案: ABC
38. 问题:用于指定模板类型参数的关键字是()
A.Typedef
B.typename
C.class
D.typeid
标准答案: BC
39. 问题:下列关于 std::auto_ptr 的用法,正确的是: ()
A.
char* chrarray = new char[100];
strcpy(chrarray,"I am programming.";
auto_ptr<char*> m_SMPTRchrptr(chrarray;
B.
vector<auto_ptr<int>> m_VECsmptr; m_VECsmptr.push_back(auto_ptr<int>(new int(100; C.int m_nObj(300;
auto_ptr<int> m_SMPTR(&m_ nObj;
D.auto_ptr<int> m_SMPTR1(new x(100; m_SMPTR1.reset(new x(200;
标准答案: D
40. 问题:下列函数模板的写法正确的是: () A.template <class Type>
Type min(Type a, Type b {
typedef double Type; Typetmp = a < b ? a : b; return tmp;
}
B.template <typename T, U> T sum(T*, U;
C.template <class Parm, class U> Parm minus(Parm* array, U value
{
Parm::name *p;
}
D.template <class Parm, class U>
Parm minus(Parm* array, U value {
typename Parm::name *p; }
标准答案: D
41. 问题:下面类模板的书写正确的是 :() A.template <typename T, U>
class collection;
B.template <class Type, class Type>
class container;
C.template<class Type>
class QueueItem{
public:
//.... private:
typedef double Type;
Typeitem; };
D.template<class Type> class QueueItem; template<class Type>
class Queue;
标准答案: D
42. 问题:下列 bitset 对象的声明哪些是错误的() A.bitset<64>bitvec(32;
B.bitset<32> bv( 1010101 ;
C.string bstr; cin >> bstr; bitset<8>bv( bstr ; D.bitset<32> bv; bitset<16> bv16( bv ;
标准答案: BD
43. 问题:()
Int main(
{
ASSERT(4 == sizeof(long ;
Printf(“OK.”;
}在上面的main函数中,下面正确的是 ()
A.在 32bit 机上不通过
B.在 16bit 机上通过
C.在 64bit 机上通过
D.在 32bit 机上通过
标准答案: D
44. 问题:void assert(intexpression;以下哪些情况描述动态断言是正确的 ()
A.assert 的作用是先计算表达式 expression,如果其值为假(即为 0,那么它先向 stderr 打印 一条出错信息,然后通过调用 abort 来终止程序运行
B.assert 是运行期的判断
C.assert 是经常应用于 release 版本中
D.assert 在 release 版本总也会生效
标准答案: AB
45. 问题:()
int main(
{
#ifndef NDEBUG
cout<<”ok”<<endl;
#endif
}
以下哪些情况描述是正确的 ()
A.如果 NDEBUG 定义了,那么程序则输出 OK
B.如果 NDEB UG 没定义,那么程序则输出 OK C.开发完成后,要将程序交付客户时,可通过不定义 NDEBUG 变量,有效地删除这些调试 语句。
D.OK 总是能够输出。
标准答案: B
46. 问题:#define 的缺点有 ()
A.不支持类型检查
B.不考虑作用域
C.符号名不能限制在一个命名空间中
D.不利于程序可读性。
标准答案: ABC
47. 问题:下列对 dbx 调试器命令说法正确的是 ()
A.stopi 在指定位置设置停止点
B.step(单步 运行一个源命令行
C.rerun 继续应用程序的运行直到达到返回一个指定的过程
D.where??????????????? 塣
标准答案: AB
48. 问题:连接两字符串的函数有 ()
A.Strchr
B.strB at
C.strtok
D.strncat
标准答案: BD
49. 问题:下面那几个运算符是对位进行操作的。 ()
A.&
B.^
C.~
D.<<
标准答案: ABCD
50. 问题:以下正确的叙述是()
A.在 C 程序中,逗号运算符的优先级最低
B.在 C 程序中,APH 和 aph 是两个不同的变量
C.若 a 和 b 类型相同,在执行了赋值表达式 a=b 后 b 中的值将放人 a 中,而 b 中的 值不变。 D.当从键盘输入数据时 ,对于整型变量只能输入整型数值 ,对于实型变量只能输入实型数值 标准答案: ABC
51. 问题:下关于运算符优先顺序的描述中不正确的是() A.关系运算符<算术运算符<赋值运算符<逻辑与运算符
B.逻辑 运算符< 关系运算符< 算术运算符< 赋值运算符
C.赋值运算符< 逻辑与运算符< 关系运算符< 算术运算符
D.算术运算符< 关系运算符< 赋值运算符< 逻辑与运算符
标准答案: ABD
52. 问题:以下多线程对 int 型变量 x 的操作,哪几个需要进行同步 :()
A.x=y;
B.x++;
C.信号量;
D.x=1;
标准答案: ABC
53. 问题:在线程中有几种同步对象可供使用 ()
A.互斥锁;
B.条件变量;
C.读写锁;
D.读写锁;
标准答案: ABCD
54. 问题:多线程对共享内存进行操作时 ,需要某种形式的同步 ,其中可用的同步形式包括 ()
A.互斥锁;
B.条件变量;
C.读写锁
D.记录锁;
标准答案: ABCD
55. 问题:关于共享内存描述正确的是()
A.共享内存区是最快的可用 IPC 形式。
B.mmap 函数把一个文件或一个 Posix 共享内存区对象映射到调用进程的地址空间。 C.Posix调用shm_open和mmap创建并映射共享内存区.而SystemV 是使用shmget和shmat 完成此工作。
D.Posix 和 System V 都可以在共享内存使用过程中改变共享内存大小。 标准答案: ABC
56. 问题:以下针对 posix 消息队列描述正确的为()
A.消息队列使用 mq_open 函数创建一个新的消息队列或打开一个已存在的消息队列 B.消息队列随着使用程序的终止而自动删除 C.消息队列有最大消息数和消息的最大字节数限制 D.消息队列支撑异步事件通知,如产生信号等
标准答案: AC
57. 问题:
以下代码为删除 myMap 中的元素,哪个说法是正确的 map<int> ::iterator iter =NULL;
for(iter=myMap.begin( ; iter!=myMap.end(;
{
myMap.erase(iter++; } ()
A.iter 删除后会失效,导致程序异常 B.代码有误
C.第一个元素未被删除 D.所有元素都会被删除
标准答案: D
58. 问题: 如下代码,正确的输出结果为 ______ #include <iostream>
using namespace std;
void abc(char *p {
if(*p=='\0' return;
abc(p+1;
cout<<*p; }
void main( {
char *p="abcd"; cout<<*p;
p++;
cout<<*p;
p++; cout<<*p; p++; cout<<*p;
abc("abcd";
} ()
A.abcdabcd
B.abB ddB ba
C.dcbaabcd
D.以上说法都不对
标准答案: B
59. 问题:关于函数调用,如下说法正确的有()
A.在高级语言中 ,针对参数传递 ,常见的调用约定有 :stdcall、cdecl、fastcall、thiscall、nakedcall B.函数调用时 ,调用者依次把参数压栈 ,然后调用函数 ,函数被调用以后 ,在堆栈中取得数 据,并进行计算 。函数计算结束以后 ,或者调用者 、或者函数本身修改堆栈 ,使堆栈恢复原 状
C.栈是一种先进后出的数据结构,栈有一个存储区、一个栈顶指
D.以上说法都不对
标准答案: ABC
60. 问题:C++函数的参数传递方式有哪些? ()
A.值传递
B.引用传递
C.指针传递
D.以上都不对
标准答案: ABC
61. 问题:关于函数指针和指针函数,如下说法正确的有()
A.“指针函数 ”是指带指针的函数,即本质是一个函数 B.“函数指针”是指向函数的指针变量 ,因而“函数指针”本身首先应是指针变量 ,只不过 该指针变量指向函数
C.“指针函数 ”就是“函数指针 ”,两者无区别
D.以上说法都不对
标准答案: AB
62. 问题:关于回调函数,如下说法正确的有()
A.回调可用于通知机制
B.回调在 C 语言中是通过函数指针来实现的 ,通过将回调函数的地址传给被调函数从而实现 回调
C.调用者不关心谁是被调用者 ,只需知道的存在一个具有某种特定原型 、某些限制条件的被 调用函数。
D.以上说法都不对
标准答案: ABC
63. 问题:( 下面程序的输出为 ______ #include <iostream> #include <stdio.h>
using namespace std;
class abc;
void del(abc *pobj {
delete pobj; }
class abc {
public:
abc({ printf("abc\r\n";
}
~abc({ printf("~abc\r\n";
} };
int main( {
abc *pobj = new abc; del(pobj;
return 0; }
A.abc
B.abc
~abc
C. ~abc
D.以上都不对 标准答案: A
64. 问题: 下面程序的输出为 ______ #include <iostream>
#include <stdio.h> using namespace std; class abc
{
public: abc({
printf("abc\r\n"; }
~abc({ printf("~abc\r\n";
} };
void del(abc *pobj {
delete pobj; }
int main( {
abc *pobj = new abc;
del(pobj; A.abc
B.abc
~abc
C. ~abc
D.以上都不对 标准答案: B
65. 问题: 下面程序的输出为 ______ #include <iostream> #include <stdio.h>
template <typename T> class abc{
public:
abc({ printf("primary\r\n";
} };
template<> abc<int>::abc(
{
printf("member spec\r\n";
};
template<typename T, typename P> class abc<T (*(P>
{
public:
abc({
printf("partial spec\r\n";
} };
template<typename T, typename P> class abc<T (*(P>
{
public:
abc({
printf("partial spec\r\n";
} };
int main( {
abc<void* (*(int> f_abc; abc<int> i_abc;
return 0; }
A.partial spec member spec
B.partial spec primary C.member spec
primary
D 以上都不对 标准答案: A
66. 问题: 如下代码输出结果是 ______ void exchg(int &x, int &y
{
int tmp=x; x=y; y=tmp;
print(“x=%d,y=%d\n”,x,y; }
void main( {
int a=4;
int b=6;
exchg(a,b; fprintf(“a=%d,b=%d\n”, a, b;
}
A.x=4, y=6
a=6, b=4
B.x=6, y=4
a=6, b=4
C.x=6, y=6
a=4, b=4
D.x=6, y=6
a=4, b=4
标准答案: B
67. 问题: 如下代码输出结果是 ______ void exchg(int *px, int *py
{
int tmp=*px;
*px=*py;
*py=tmp; print(“x=%d,y=%d\n”,*px,*py;
}void main( {
int a=4;
int b=6;
exchg(&a,&b; fprintf(“a=%d,b=%d\n”, a, b;
}
A.x=4, y=6
a=6, b=4
B.x=6, y=4
a=6, b=4
C.x=6, y=4
a=4, b=6
D.x=4, y=4
a=6, b=6
标准答案: B
68. 问题: 如下代码输出结果是 ______
class A { public:
};
A({printf("created.\n"; };
A(A& a {printf("created with copy.\n"; }; ~A({};
Afoo(Aa {
Ab;
return a; }
int main( {
Aa;
a = foo( a ; return 0;
} A.created.
created.
B.created with copy.
created with copy.
C.created.
created with copy.
created.
created with copy
D.created.
created.
created with copy. 标准答案: C
69. 问题: 如下代码输出结果是 ______ class A
{
public:
A({printf("created.\n"; };
A(A& a {printf("created with copy.\n"; }; ~A({};
};
A foo( A& a {
Ab;
return a; }
int main( {
Aa;
a = foo( a ; return 0;
}
A. created.
Created. B.created with copy.
created with copy. C.created.
created with copy. created.
created with copy.
D.created.
created.
created with copy.
标准答案: D
70. 问题:C++不同存储的对象生存期不同 。所谓对象的生存期是指对象从被创建开始到被
释放为止的时间。按生存期的不同对象可分为() A.局部对象
B.静态对象
C.全局对象
D.以上都不是
标准答案: ABC
71. 问题:关于 this 指针,如下说法正确的有() A.每一个非静态成员函数都有一个由 C++编译器创建的隐式参数,即 this 指针 B.友元函数和静态函数没有 this 指针 C.在返回用来调用非静态成员函数的对象时,应该显式地使用 this 指针 D.友元函数也可以有 this 指针
标准答案: ABC
72. 问题:下面的代码能否通过编译?为什么?() A.不能。如果一个类有虚析构函数的话,那么自定义 delete 函数必须有函数体 B.能。这个题目中,并不会调用 delete 函数。
C.不能。对于本题,delete 函数不被调用,但是编译器需要它,因此,不能没有定义 D.以上都不对
标准答案: AC
73. 问题:非 C++内建型别 A 和 B,在哪几种情况下 B 能隐式转化为 A?() A.classB:publicA{......}//B 公有继承自 A,可以是间接继承的
B.B lass B { operator A( ; } // B 实现了隐式转化为 A 的转化
C.class A { A( const B& ; } // A 实现了 non-explicit 的参数为 B(可以有其他带默认值的参数 构造函数
D.A& operator= ( const B& ; // 赋值操作,虽不是正宗的隐式类型转换,但也可以勉强算一 个
标准答案: ABCD
74. 问题:关于命名空间,如下说法正确的有() A.命名空间可以是全局的,也可以位于另一个命名空间之中,但是不能位于类和代码块中 B.标准 C++库中所包含的所有内容(包括常量、变量、结构、类和函数等都被定义在命名空 间 std 中了
C.命名空间(namespace 是一种描述逻辑分组的机制,可以将按某些标准在逻辑上属于同一 个集团的声明放在同一个命名空间中
D.有两种形式的命名空间:有名的和无名的
标准答案: ABCD
75. 问题:XXXX() 下面程序的输出为 ______ #include <iostream> #include <stdio.h>
void * operator new(size_t size {
printf("malloc %u\r\n", size;
return malloc(size; }
void operator delete(void * memblock {
printf("free\r\n";
return free(memblock; }
class abc {
public:
abc( {
throw int(; }
~abc( {
printf("~abc\r\n"; }
};
int main( {
try
printf("abc\r\n";
{
new abc;
printf("sizeof(abc is:%d\n", sizeof(abc;
}
catch (int & i {
printf("%d\r\n", i; }
return 0; }
A.malloc 1 abc free
0 B.abc
0 C.malloc 1
abc
free sizeof(abc is:1 0
D.以上都不对
标准答案: A
76. 问题:XXXX() 下面程序的输出为 ______ #include <iostream>
#include <stdio.h>
void * operator new(size_t size {
printf("malloc %u\r\n", size;
return malloc(size; }
void operator delete(void * memblock {
printf("free\r\n";
return free(memblock; }
class abc {
public:
abc( {
throw int(; }
~abc( {
printf("~abc\r\n"; }
};
int main( {
try {
}
catch (int & i {
printf("%d\r\n", i; }
return 0; }
A.malloc 1 abc free
0 B.abc
0 C.malloc 1
abc
free sizeof(abc is:1 0
D.以上都不对
标准答案: B
77. 问题:关于函数重载,如下说法正确的有() A.所谓函数重载是指同一个函数名可以对应着多个函数的实现 B.函数重载要求编译器能够唯一地确定调用一个函数时应执行哪个函数代码 ,即采用哪个函 数实现
C.进行函数重载时,要求同名函数在参数个数上不同,或者参数类型上不同
printf("abc\r\n";
abc a;
printf("sizeof(abc is:%d\n", sizeof(abc;
D.进行函数重载时,可以只是返回值不同,参数个数和参数类型都可以相同 标准答案: ABC
78. 问题:关于运算符重载,如下说法正确的有() A.运算符重载的函数一般地采用如下两种形式:成员函数形式和友元函数形式; B.使用成员函数形式的运算符重载,可以访问类中的私有成员 C.使用友元函数形式的运算符重载,可以访问类中的私有成员 D.以上说法都不对
标准答案: ABC
79. 问题:关于运算符重载,如下说法正确的有()
A.所有的运算符都可用作重载 B.重载运算符不能改变运算符操作数的个数、运算符原有的优先级、结合性、语法结构 C.重载运算符含义必须清楚,不能有二义性
D.运算符重载可以使程序更加简洁 ,使表达式更加直观,增加可读性,要尽可能多的进行运 算符重载
标准答案: BC
80. 问题:XXXX()
如下代码,屏幕输出为 ______
class A
{
public:
virtual void foo( { cout << "A::foo( is called" << endl;} };
class B: public A {
public:
virtual void foo( { cout << "B::foo( is called" << endl;} };
int main( {
A * a = new B(; a->foo(;
return 0;
}
A.A::foo( is called B.B::foo( is called C.B::foo( is called
A::foo( is called D.A::foo( is called
B::foo( is called
标准答案: B
81. 问题:XXXX() 如下代码,屏幕输出为 ______
class A { public:
virtual void foo( { cout << "A::foo( is called" << endl;} };
class B: public A {
public:
virtual void foo( { cout << "B::foo( is called" << endl;} };
int main( {
A a=B(; (&a->foo(; return 0;
}
A.A::foo( is called B.B::foo( is called C.B::foo( is called
A::foo( is called D.A::foo( is called
B::foo( is called
标准答案: A
82. 问题:关于虚函数和纯虚函数,如下说法正确的是() A.虚函数和纯虚函数可以定义在同一个类中,含有纯虚函数的类被称为抽象类 B.虚函数可以被直接使用,也可以被子类重载以后以多态的形式调用 C.虚函数和纯虚函数都可以在子类中被重载,以多态的形式被调用 D.虚函数和纯虚函数通常存在于抽象基类之中 ,被继承的子类重载,目的是提供一个统一的 接口
标准答案: ABCD
83. 问题:针对如下代码,如下说法正确的是()
A.B::foo(是虚函数
B.C::foo(也同样是虚函数
C.因为没有 virtual 关键字,故 B::foo(C::foo(都不是虚函数
D.B::foo(是虚函数,但 C::foo(不是虚函数
标准答案: AB
84. 问题:关于内联和宏,如下说法正确的是()
A.内联函数和宏很类似 ,而区别在于,宏是由预处理器对宏进行替代 ,而内联函数是通过编 译器控制来实现的
B.内联函数是真正的函数 ,只是在需要用到的时候 ,内联函数像宏一样的展开 ,所以取消了 函数的参数压栈,减少了调用的开销 C.使用内联代替宏可进行类型安全检查或自动类型转换
D.传统的宏定义函数已经很好用了,不需要使用内联函数 标准答案: ABC
85. 问题:针对如下类的定义,说法正确是()
A.类 CTest1、CTest2、CTest3、CTest4 都不能通过编译 B.类 CTest4 不能通过编译
C.类 CTest3 虽然可以通过编译,但是不建议将虚函数定义为内联函数 D.类 CTest1、CTest2、CTest3都可以通过编译
标准答案: BCD
86. 问题:如何清除所有的断点()
A.菜单【调试】 ->【删除所有断点 】,打开“Breakpoints”对话框,单击【是】按钮即可 B.Ctrl + Shift + F8
C.Ctrl + Shift + F9
D.菜单【Edit】->【Breakpoints...】,打开“Breakpoints”对话框,单击【 Remove All】按钮 即可
标准答案: AC
87. 问题:Release 和 Debug 有什么不同()
A.Release 版称为发行版,Debug 版称为调试版
B.Debug 中可以单步执行、跟踪等功能,但生成的可执行文件比较大,代码运行速度较慢 C.Release 版运行速度较快,可执行文件较小,但在其编译条件下无法执行调试功能 D.菜单【Edit】->【Breakpoints...】,打开“Breakpoints”对话框,单击【 Remove All】按钮 即可
标准答案: ABC
88. 问题:启动调试模式的方式有()
A.启动调试(StartDebugging
B.附加到进程(Attach to Process
C.逐语句(Step Into
D.逐过程(Step Over
标准答案: ABCD
89. 问题:启动 GDB 的方法()
A.gdbprogram
B.gdb program B ore
C.gdb program 1234
D.gdb program
标准答案: ABC
90. 问题:退出 GDB 的方法()
A.exit
B.quit
C.ctrl+d
D.ctrl+c
标准答案: BC
91. 问题:关于将 GDB 的命令输出到文件的命令 :()
A.开启 logging,使用命令:setloggingon
B.关闭 logging,使用命令:set logging off
C.更改输出文件,使用命令: set logging file file
D.显示当前的 logging 设置值,使用命令:show logging 标准答案: ABCD
92. 问题:在使用 GDB 调试时,如何输入参数() A.gdbprogram 参数 1 参数 2
B.run 参数 1 参数 2 C.run 参数 1,参数 2 D.set args 参数 1 参数 2 标准答案: BD
93. 问题:查看当前设置的断点信息() A.infobreak
B.info break 2
C.break info
D.break info 2
标准答案: AB
94. 问题:如何删除断点()
A.delete[断点号]
B.Clear linenum
C.disable [断点号]
D.enable [断点号]
标准答案: AB
95. 问题:断点、监视点、捕获点有四种激活状态中的任意一种() A.已激活的(Enabled,断点会中断程序,这个状态是用 break 命令发起 B.已禁用的( Disabled,断点不再影响程序
C.激活一次(Enabled once,断点会中断程序,但会变成 disabled 状态 D.激活并删除(Enabled for deletion,断点中断程序,但中断后立即就永 标准答案: ABCD
96. 问题:关于打印源代码行说明正确的有 ()
A.listfunction 以函数 function 开头为中心打印源文件
B.list first,last 从 first 行开始打印到 last 行
C.list + 只打印最近打印行前的代码
D.list - 只打印最近打印行后的代码
标准答案: AB
97. 问题:XXXX()
关于预处理宏,说法正确的有:
#include "stdio.h"
#define X 4
#define Y 6
int main(int argc, char* argv[]
{
inti =0;
i = X + Y;
printf("%d\n",i;
return 0;
}
A.macroexpi=X+Y 显示该表达式里引用的 X、Y 的展开结果,但不会计算 i 的结果
展开 X 的结果
标准答案: ABC
99. 问题:在通过 dbx,使用进程 ID 调试程序时,下述用法正确的有() A.dbxprogram_nameprocess_id
B.dbx program_name{.B lass|.jar} proB ess_id
C.dbx process_id
D.dbx - process_id
标准答案: ABD
100. 问题:虽然大多数调试支持要求使用 -g 选项编译程序,dbx 仍为未使用-g 选项进行编译
的代码提供以下级别的支持() A.栈回溯(dbxwhere 命令 B.显示源代码 C.调用函数(但没有参数检查 D.检查全局变量
标准答案: ACD
101. 问题:dbx 提供三个保存和稍后重新运行全部或部分调试运行的命令 () A.dbxprogram_nameprocess_id
B.save [-number] [filename]
C.restore [filename]
D.replay [-number]
标准答案: BCD
102. 问题:使用 dbx 时,如何设置断点()
A.breakfile:line
B.stop file:line
C.stop in 函数
D.break in 函数
标准答案: BC
103. 问题:XXXX()
在下述有序数组顺序查找算法函数中,不正确的是
#include "stdafx.h"
#define MAX_KEY 500
int sq_Order_Search(int array[],int n,int key
{
int i; A.array[n]=MAX_KEY;
展开 X 的结果
显示 Y 的定义,并显示 Y 是在代码的何处设立的
B.macro exp X
C.info macro Y
D.macro X
标准答案: ABC
98. 问题:关于跟踪点说法正确的有: () A.目前,跟踪点功能只在远程系统上实现
B.trace +2 将当前行的下两行设置为跟踪点
C.trace *my_function 将函数的真正开始的地方设置为跟踪点 D.passcount 2 3 跟踪点 2 在第 3 此执行时中止
B.for(i=0;key>array[i];i++//正确 for(i=0;key>array[i];i++; C.if(i<n && array[i] == key
D.return(i;
else return(-1;
}
标准答案: B
104. 问题:XXXX() 在下述有序数组折半查找算法函数中,不正确的是 int find(int num[], int x, int low, int high
{
int mid; A.while(low<=high
B.mid=(low+high/2; C.if(x==num[mid]
return mid; D. low=mid+1;
}
return 0; }
标准答案: D
105. 问题:XXXX() 在下述二叉树查找算法函数中,不正确的是
int SearchBST(BSTree bst,KeyType key/*返回 1 成功,返回 0 失败*/ {
BSTree q; q=bst; while(q
{
A.if(q->key==key return 1;
B.if(q->key<key
C. q=q->lchild;
// if(q->key>key
else D.
}
return 0; }
q=q->rchild;
标准答案: B
106. 问题:对于顺序查找,其平均查找长度为 () A.查找成功时的平均查找长度为 (n+1/2 B.查找失败时的平均查找长度为 3*(n+1/4 C.查找成功时的平均查找长度为 3*(n+1/4
D.查找失败时的平均查找长度为 (n+1/2 标准答案: AB
107. 问题:XXXX() 关于冒泡排序函数,不正确的是
void sort(int num[], int nLen {
int i, j, tmp;
A. for(i=0; i<nLen; i++
{
B.for(j=0; j<nLen-i; j++
{
C. if(num[j]>num[j+1]
{
D. tmp=num[j];
// for(i=1; i<nLen; i++
标准答案: A
108. 问题:XXXX() 关于插入排序函数,不正确的是 void Sort(int arr[], int nlen
{
A. for (int i = 1; i < nlen; i++
{
B.int t = arr[i];
int j = i;
while ((j > 0 && (arr[j - 1] > t {
C. arr[j-1] = arr[j]; -- j;
} D. arr[j] = t;
} }
// arr[j] = arr[j - 1];
标准答案: C
109. 问题:XXXX() 关于折半插入排序函数,不正确的是 void BiInsert_sort(int p[], int len, int x {
int low = 0, high = len, mid = 0; A. while(low <= high
{
mid = (low+high/2;
if (x < p[mid] B.high = mid-1;
Else C.low = mid+1;
}
D.p[mid] = x; // p[mid+1] = x
}
标准答案: D
110.问题:关于插入排序算法说法正确的是 ()
A.直接插入排序的时间复杂度为 O(n2 B.折半插入排序的时间复杂度与直接插入排序的时间复杂度相同
C.希尔排序又称 “缩小增量排序 ”,它的基本思想是:先将整个待排记录序列分割成为若干 子序列分别进行直接插入排序 ,待整个序列中的记录“基本有序”时,再对全体记录进行一 次直接插入排序
D.表插入排序的时间复杂度为 O(n2+1 //表插入排序的时间复杂度为 O(n2 标准答案: ABC
111. 问题:下面哪些排序算法的时间复杂度与冒泡排序算法相同 ()
A.插入排序
B.选择排序
C.鸡尾酒排序
D.归并排序
标准答案: ABC
112. 问题:下面哪些排序算法的时间复杂度是相同 ()
A.快速排序
B.堆排序
C.基数酒排序
D.归并排序
标准答案: ABD
113. 问题:下面哪些排序算法属于稳定的排序算法()
A.选择排序
B.希尔排序
C.插入排序
D.归并排序
标准答案: CD
114. 问题:下面哪些排序算法属于不稳定的排序算法()
A.基数排序
B.希尔排序
C.堆排序
D.快速排序
标准答案: BCD
115.问题:重构的作用有哪些 ()
A.改进软件设计
B.使软件更易被理解
C.助你找到臭虫( bugs
D.软件设计时一并重构
标准答案: ABCD
116. 问题:何时重构()
A.添加功能时一并重构
B.修补错误时一并重构 C.复审代码时一并重构 D.助你提高编程速度 标准答案: ABC
117. 问题:关于 DivergentChange(发散式变化和 ShortgunSurgery(散弹式修改说法正确的是 ()
A.DivergentChange(发散式变化是指一个class经常因为不同的原因在不同的方向上发生变化 B.Divergent Change(发散式变化是指每遇到某种变化,都必须在许多不同的 B lasses 内做出 许多小修改以响应之
C.Divergent Change(发散式变化是指“一个 class 受多种变化的影响”,Shotgun Surgery(散弹 式修改则是指“一种变化引发多个 class 相应修改”。
D.Shortgun Surgery(散弹式修改是指每遇到某种变化 ,都必须在许多不同的 classes 内做出许 多小修改以响应之
标准答案: ACD
118. 问题:针对函数的重构方法有()
A.ExtractMethod
B.Inline Method
C.Replace Mehtod with Method Object
D.Substitute Algorithm
标准答案: ABCD
119. 问题:针对 DuplicatedCode 的重构方法有() A.ExtractMethod
B.ExtraB t Class
C.Replace Mehtod with Method Object
D.Pull Up Method
标准答案: ABD
120. 问题:针对 LongClass 的重构方法有 () A.ExtractMethod
B.ExtraB t Class
C.Replace Temp with Query
D.Introduce Explaining Variable
标准答案: ACD
121. 问题:针对 LongParameterList 的重构方法有() A.PreserveWholeObject
B.ReplaB e Parameter with ExpliB it Methods
C.Introduce Parameter Object
D.Replace Parameter with Method
标准答案: ACD
122. 问题:为了简化条件表达式,可以采用哪些重构方法() A.DecomposeConditional
B.Consolidate Conditional Expression
C.Remove Control Flag
D.Consolidate Duplicate Conditional Fragments
标准答案: ABCD
123. 问题:为了简化函数调用,可以采用哪些重构方法() A.AddParameter
B.Remove Parameter
C.Separate Query from Modifier
D.Parameterize Method
标准答案: ABCD
124. 问题:针对 SwitchStatements 的重构方法有 ()
A.ExtractMethod
B.Move Method
C.Replace Type Code with Subclasses
D.Replace Parameter with Method
标准答案: ABC
125. 问题:针对两个类中出现的重复代码,其重构方法有()
A.先使用 ExtractMethod,再使用 PullUpMethod
B.先使用 Move Method,再使用 Pull Up Method
C.先使用 Move Method,再使用 From Template Method
D.先使用 Extract Method,再使用 From Template Method
标准答案: AD
126. 问题:PROC 中的动态 SQL 语法正确的有 ()
A.EXECSQLEXECUTEIMMEDIA TE"CREA TET ABLEdyn1(col1V ARCHAR2(4" B.strcpy(c_sql, "DELETE FROM EMP WHERE EMPNO =12";
EXEC SQL PREPAREsql_stmt FROM :c_sql;
EXEC SQL EXECUTE sql_stmt USING :emp_number;
C.strcpy(c_sql,"select c_user_id,c_user_name,to_char(t_date,'yyyy/mm/dd hh:mi:ss',n_fee\n"; strcat(c_sql,"from USER_FEE_";
strcat(c_sql,ac_mon;
strcat(c_sql," \n where c_user_id = :v1";
EXEC SQL PREPAREs FROM :c_sql;
EXEC SQL DECLARE cur_user_fee CURSOR FOR s;
EXEC SQL OPEN cur_user_fee USING :ac_user_id;
while(1 {
EXEC SQL FETCH cur_user_fee into :c_user_id,:c_user_name,:c_date,:n_fee;
if (sqlca.sqlcode < 0
{
/*FETCH CURSOR 失败*/
printf("fetch cursor cur_user_fee fail,sqlcode=%ld,sqlserr=%s",sqlca.sqlcode,sqlca.sqlerrm.sqlerrmc;
}
if( sqlca.sqlcode == SQLNOTFOUND
{
break;
}
}
EXEC SQL CLOSE cur_user_fee;
标准答案: ABC
127. 问题:针对 SQLCA 描述正确的有()
A.SQL 是 ORACLE 的一个结构体,它用于保存最近的一条 SQL 语句执行后的一些信息 ,如 错误号,错误描述,警告,状态等
B.SQLCA.sqlerrd[3]记录最近的一条 SQL 语句所处理的行数 ,如果语句处理失败 ,则它的值是 不定的。
C.SQLCA.sqlerrd[3] 记录最近的一条 SQL 语句所处理的行数,如果错误在一个 CURSOR 操 作中发生,则它的值指已成功处理的行数。
D.在 DELETE,UPDATE中, SQLCA.sqlerrd[3]包含因外键约束而删除,更新的那些行。 标准答案: ABC
128. 问题:PROC 中调用存储过程,哪些编译选项必须添加()
A.USERID=scott/tiger
B.sqlB heB k=SEMANTICS
C.ireclen=512
D.sqlcheck=syntax
标准答案: ABC
129. 问题:如下哪些是 ODBC 驱动程序层功能()
A.为 ODBC 提供参数和次数验证
B.建立与数据源的连接
C.在应用程序需求时,转换数据格式
D.将运行错误格式化为标准代码返回
标准答案: BCD
130. 问题:将运行错误格式化为标准代码返回()
A.SQLAllocStmt
B.SQLPrepare
C.SQLSetParam
D.SQLGetCursorName
标准答案: ABCD
131. 问题:如下哪些是传输及执行 sql 的函数接口()
A.SQLExecute
B.SQLNativeSql
C.SQLGetCursorName
D.SQLParamData
标准答案: ABCD
132. 问题:下面那些文件是属于 TimesTen中的文件? ()
A.检查点文件
B.归档日志文件
C.事务日志文件
D.预留空间文件
标准答案: ACD
133. 问题:TimesTen的锁的类型有那几种?() A.行级锁
B.表级锁
C.DataStore 级锁
D.事务级锁
标准答案: ABC
134. V 问题:在生产库中创建自读 cachegroup 的最佳方式是: () A.create readonly cache group CG_TB_PRD_OFR
autorefresh
mode incremental with limit 10000 interval 300000 milliseconds
state paused
from TB_PRD_OFR(
OFR_ID NUMBER(9 NOT NULL, OFR_TYPE_ID NUMBER(9 NOT NULL, PRIMARY KEY(OFR_ID;
B.create readonly cache group CG_TB_PRD_OFR autorefresh
mode full with limit 10000 interval 300000 milliseconds state paused
from TB_PRD_OFR(
OFR_ID NUMBER(9 NOT NULL, OFR_TYPE_ID NUMBER(9 NOT NULL, PRIMARY KEY(OFR_ID;
C.create readonly cache group CG_TB_PRD_OFR autorefresh
mode full with limit 10000 interval 300000 milliseconds state paused
from TB_PRD_OFR(
OFR_ID NUMBER(9 NOT NULL, OFR_TYPE_ID NUMBER(9 NOT NULL;
D.create readonly cache group CG_TB_PRD_OFR autorefresh
mode full with limit 10000
interval 300000 milliseconds from TB_PRD_OFR(
OFR_ID NUMBER(9 NOT NULL,
OFR_TYPE_ID NUMBER(9 NOT NULL; 标准答案: A
135. 问题:下列说法正确的是()
A.一个 TimesTenDataManager 可以管理多个 DataStore。
B.DataStore 由放在相应 ODB C 配置文件中的一个 DSN(Data SourB e Name 所定义。
C.该 DSN 由一个名字和相关的属性组成。
D.一个 TimesTenData Manager 只可管理一个 DataStore
标准答案: ABC
136. 问题:TimesTem连接方式 ()
A.Direct Driver 连接。
B.客户端/服务器连接。
C.Driver Manager 连接
D.TimesTem的 API 接口连接
标准答案: ABC
137. 问题:Timesten 有三种锁机制,DataStore 级、表级锁、行级锁,下列描述正确的是: () A.可以在 ODBCINI 配置文件中通过参数 LockLevel 设置是 DataStore 级锁还是行级锁。 B.可通过存储过程 ttLockLevel( 动态设置
C.应用程序可以调用存储过程 ttOptSetFlag( 提示查询优化器采用行级锁( RowLock 还是表 级锁(TblLock。
D.通过存储过程 ttLockWait( 设置等待锁的
标准答案: ABCD
138. 问题:在 timesten 中,一般有两种索引, Hash 索引和 T-TREE索引,下列描述正确的
是: ()
A.调优的哈希索引快于 T 树索引,但哈希索引不能用于范围查询。 B.一个哈希三列索引只能用于三列全部精确匹配查询。
C.组合索引时,Hash 索引需要列出的完全匹配,而 T-tree索引只需要前置匹配。
D.Hash 索引做等值匹配查询具有较大的优势 ,但占用空间较大;只能出现在 primary key 上; 一旦有数据了不能再被改变。
标准答案: ABCD
139. 问题:下列关于 cachegroup 描述正确的是:() A.TimesTen中的数据是只读的,数据只是在 Oracle 中更新,然后通过 Autorefresh 机制刷新 到 TimesTen中。
B.AWTcache group ,即事务先在 TimesTen中提交,然后以异步的模式在 Oracle 中提交。 C.AWTcache group,当应用提交事务时,首先在 Oracle 提交,然后在 TimesTen中提交,在 此期间,应用一直被阻塞。
D.Read only cache group 可以通过 FLUSH 命令来刷新数据。
标准答案: ABC
140. 问题:以下说法错误的是()
A.UXDIR 指的是 tuxedo 的安装路径
B.在 linux 上编译 tuxedo 客户端程序用的编译器为 buildB lient
C.tuxedo 是 EBA 公司的中间件产品
D.tuxeo 是 1984 年由比尔盖次实验室开发成功的
标准答案: CD
141. 问题:以下说法有关配置文件 ubbconfig 说法正确的是()
A.IPCKEY:tuxedo 使用它标识公告板及其他的 IPC 资源,它不能与该服务器上的其它 IPC 资源的 ID 冲突,其范围是:32769~262142
B.MAXSERVERS:设定在本系统中,总共可以有多少个 Server 存在,包括进行管理的 Server, 如:B B L,TMS 等。默认值为 50
C.SCANUNIT:指定检查的最小时间单位,单位为秒,必须是 10 秒
D.SHM:单机或多台服务器但共用一个全局共享内存 标准答案: ABCD
5 的倍数。默认值为 10,即
142. 问题:以下说法正确的是()
A.本地客户端只能用 C 语言或 COBAL 语言编写,远程客户端可以用几乎所有的编程语言编 写
B.在远程客户端所在的机器上要安装 tuxedo的客户端软件,并且要设置相应的环境变量。 在本地客户端上则不用
C.用 buildclient 编译远程客户端程序时要加 “-W”,编译本地客户端则不用
D.可以使用 buildclient 来编译服务端程序。
标准答案: ABC
143. 问题:以下说法正确的是()
A.tpinit,tpalloc 函数定义在 atmi.h
B.一个 serviB e 其实就是一个 C 函数,它的参数只能是一个 TPSVCINFO 结构体指针 C.一个 service 的处理结果是用 tpreturn(函数返回给调用它的客户端
D.一个 service 无法调用其他 service
标准答案: AB
144. 问题:以下说法错误的是 ()
A.DOMAIN 域生成的二进制配置文件叫 tuxconfig
B.DOMAIN 域生成的二进制配置文件命令是 dmloadB f ubbdom C.DM_LOCAL_SERVICES 定义 LOCAL_DOMAIN 中可以被其他 REMOTE_DOMAIN 访问 的 SERVICE
D.DM_REMOTE_SERVICES 定义 LOCAL_DOMAIN 中可以调用的 REMOTE DOMAIN 中的 SERVICE
标准答案: AB
145. 问题:ALTIBASE的停止()
A.Shutdownnormal
B.shutdown immediate
C.shutdown abort 事务
D.Shutdown
标准答案: ABC
146. 问题:下列属于 ALTIBASE连接方式的为()
A.IPC
B.UNIX_DOMAIN
C.TCP/IP
D.UDP
标准答案: ABC
147. 问题:下列属于影响 ALTIABSE启动的项为()
A.restartrecovery 与否
B.数据库大小
C.索引大小与个数
D.数据库加载模式
标准答案: ABCD
148. 问题:SNMP 协议需要以下哪些协议所支持()
A.tcp
B.Udp
C.ip
D.http
标准答案: BC
149. 问题:SNMP 管理工作站收集数据的方法()
A.轮询的方法
B.中断的方法
C.面向自陷的轮询方法
D.直接提取
标准答案: ABC
150. 问题:下列由管理站发出的操作是()
A.get-request
B.get-next-request
C.set-request
D.trap 和 get-response
标准答案: BC
151. 问题:SNMP 网络管理所存在的问题主要原因是()
A.SNMP 协议是无连接的
B.MIB 变量的简单性
C.SNMP 协议的简单性
D.SNMP 的安全机制
标准答案: AD
152. 问题:以下操作完成后,存在野指针的是 : ()
A.char buf[1024]={0};ptr=buf;
B.char* ptr = new char[1024];
C. char* xxx_memory(int size{char buf[] = “hello world”;return buf}; Char* ptr = xxx_memory(100; strcpy(ptr, “abc”;
D.char* xxx_memory(int size{char* ptr = new char[size]; return ptr;};
char* ptr = xxx_memory(100; strcpy(ptr, “abc”; 标准答案: C
153. 问题:以下内存分配正确的是()
A.char* ptr=newchar[100];delete[]ptr;
B.char* ptr = (char *malloc (100; free(ptr; C.char* ptr = new char[100]; free(ptr; D.char* ptr = (char *malloc(100; delete ptr; 标准答案: AB
154. 问题:下面那些是属于 TCP/IP 协议的分层? () A.应用层
B.传输层
C.网络层
D.链路层
标准答案: ABCD
155. 问题:下面关于 TCP 连接建立过程的正确描述是? () A.客户端向服务端发送 SYN
B.服务端回复 ACK
C.服务端回复 ACK 并向客户端发送 SYN
D.客户端回复 ACK
标准答案: ACD
156. 问题:下面那些状态是在关闭 TCP 连接时会发生的? ()
A.FIN_W AIT_1
B.FIND_W AIT_2
C.TIME_W AIT
D.LAST_ACK
标准答案: ABCD
157. 问题:下面那些状态是在 TCP 连接时会发生的? ()
A.SYN_SEND
B.ESTABLISHED
C.SYN_RCVD
D.LAST_ACK
标准答案: ABC
158. 问题:socket 编程中,要使 connect 函数调用是非阻塞的,要怎么做?() A.调用 ioctl 函数设置 FIOSNBIO 标志
B.调用fcntl函数设置O_NONBLOCK 或O_NDELAY标志
C.connect 本来就是非阻塞的,不用做任何操作
D.调用 fcntl 函数设置 FIOSNBIO 标志
标准答案: AB
159. 问题:在设置 TCP_NODELAY 选项的情况下,TCP 消息包是如何发送的?() A.直接发送数据到对端
B.发送缓冲区数据包达到 MTU 值时就发送
C.接收到对端 ACK 确认后立即发送下一个包
D.发送缓冲区有数据就立即发送
标准答案: CD
160. 问题:XXXX()
关于如下代码,说法正确的是 ______
#include "ace/Log_Msg.h"
#include "ace/OS_NS_unistd.h"
#include "ace/Process_Manager.h"
#define NUM_PROCESSES 4
int ACE_TMAIN(int argc, ACE_TCHAR* argv[]
{
ACE_Process_Manager* pm = ACE_Process_Manager::instance(; ACE_Process_Options options; options.command_line(ACE_TEXT("notepad.exe 1.txt";
pid_t pids[NUM_PROCESSES];
for (int i = 0; i < NUM_PROCESSES;i++ {
options.command_line(ACE_TEXT("notepad.exe %d.txt",i;
pids[i] = pm->spawn(options; }
pm->wait(;
return 0; }
A.创建 4 个线程
B.创建 4 个进程
C.创建 1 个线程
D.创建 1 个进程
标准答案: B
161. 问题:XXXX()
如下代码使用到了 ACE 函数,说法正确的是______ class CWorker : public ACE_Task<ACE_MT_SYNCH> {
int init( {
if(activate(THR_NEW_LWP | THR_JOINABLE | THR_INHERIT_SCHED | THR_SCOPE_SYSTEM, 1 == -1
{
return -1;
} }
virtual int svc(void {
printf("svc:hello!"; }
};
A.CWorker的 init(函数创建了一个线程
B.新线程在 svc(方法中启动
C.新线程再 init(方法中启动
D.svc(方法是线程回调函数
标准答案: ABD
162. 问题:关于 ACE_Thread 类,如下说法正确的有()
A.创建线程,可以通过 ACE_Thread::spawn(实现
B.ACE_Thread::suspend( 能挂起一个线程,暂停一个线程的执行;相应的,可以通 过 ACE_Thread::resume( 恢复被挂起的线程的执行
C.在主函数中调用 ACE_Thread::join(可阻塞主函数,直到线程结束才能继续执行 D.当一个线程被首次创建时 ,它的优先级等同于它所属进程的优先级 。一个线程的优先级是 相对于其所属的进程的优先级而言的。可以通过调用 ACE_Thread::setprio 函数改变线程的
相对优先级
标准答案: ABCD
163. 问题:关于 ACE 的线程池模型,如下说法正确的有()
A.半同步 /半异步模型:一个侦听线程负责接受请求,并在某个队列中缓冲它们。另外一组 工作者线程负责处理请求 B.领导者/跟随者模型:有一个线程是领导者,其余线程是线程中的跟随者。当请求到达时, 领导者首先获取请求,并在跟随者中选取一个作为新的领导者,然后继续处理请求 C.可以利用 ACE_Task 类来实现线程池模型
D.对于半同步 /半异步模型,受请求的线程并不是处理请求的线程
标准答案: ABCD
164. 问题:关于 ACE 反应堆,如下说法正确的有()
A.反应堆模式在 ACE 中被实现为 ACE_Reactor 类,它提供反应堆构架的功能接口 B.ACE_Event_Handler 类拥有若干不同的“handle”(处理方法,每个处理方法被用于处理不 同种类的事件
C.ACE_Event_Handler 中的处理方法有: handle_signal(、handle_input(、handle_exception(、 handle_timeout(、handle_output(等
D.通过调用反应堆对象的 register_handler(,将反应堆登记到事件处理器
标准答案: ABC
165. 问题:XXXX()
关于如下代码,如下说法正确的有 ______
#include ”ace/Reactor.h”
#include ”ace/Event_Handler.h”
class MyEventHandler: public ACE_Event_Handler {
int handle_signal(int signum, siginfo_t*,ucontext_t* {
switch(signum
{
case SIGWINCH:
ACE_DEBUG((LM_DEBUG, ”YoupressedSIGWINCH\n”;
break; case SIGINT:
ACE_DEBUG((LM_DEBUG, ”YoupressedSIGINT\n”;
break; }
return 0; }
};
int main(int argc, char *argv[] {
MyEventHandler *eh =new MyEventHandler; ACE_Reactor::instance(->register_handler(SIGWINCH,eh;
ACE_Reactor::instance(->register_handler(SIGINT,eh;
while(1 {
ACE_Reactor::instance(->handle_events(; }
}
A.在上面的例子中,我们首先创建了一个 ACE_Event_Handler 的子类,在其中我们重载 了 handle_signal(方法,因为我们想要使用此处理器来处理多种类型的信号 B.在主函数中,我们对我们的处理器进行实例化,随后调用 ACE_Reactor 单体(Singleton 的 register_handler,指明我们希望在 SIGWINCH(终端窗口改变信号或 SIGINT(中断信号, 通常是^C 发生时,事件处理器“eh”会被回调 C.此处创建了两个线程,分别用于处理两个信号 SIGWINCH 和 SIGINT D.我们通过在无限循环中调用 handle_events(来启动反应堆的事件循环
标准答案: ABD
166. 问题:关于 ACE 接受器(Acceptor 和连接器(Connector,如下说法正确的有() A.接受器/连接器模式设计用于降低连接建立与连接建立后所执行的服务之间的耦合
B.在 ACE 中,接收器模式借助名为 ACE_Acceptor 的“工厂”(Factory 实现 C.ACE_Acceptor 工厂允许应用开发者改变 “助手”对象,以用于:被动连接建立、连接建 立后的处理
D.ACE_Connector 工厂允许应用开发者改变“助手”对象,以用于:主动连接建立、连接建 立后的处理
标准答案: ABCD
167. 问题:以下属于 Gsoap 支持的是()
A.C++单继承
B.动态绑定
C.重载
D.指针结构
标准答案: ABCD
168. 问题:下列属于 ALTIBASE连接方式的为 ()
A.预编译器生成的远程方法调用函数中 ,最后一个参数必须是输出参数 ,该参数以引用方式 传递或定义为指针类型 . B.除最后一个参数外的其它所有参数都是输入参数,这些参数必须以传值方式传递 . C.远程方法调用函数返回一个整型值,其值说明 web 服务调用成功或出现的错误. D.命名空间前缀与函数名之间用两个下划线分割 .
标准答案: ABCD
169. 问题:下列函数模板的写法正确的是()
A.template <class Type>
Type min(Type a, Type b) {
typedef double Type; Typetmp = a < b ? a : b; return tmp;
}
B.template <typename T, U> T sum(T*, U);
C.template <class Parm, class U> Parm minus(Parm* array, U value)
{
Parm::name *p;
}
D.template <class Parm, class U>
Parm minus(Parm* array, U value) {
typename Parm::name *p; }
标准答案: D
170. 问题:XXXX()
以下输出结果是:
unsigned char a = 0xA5;
unsigned char b = a*2;
printf("b=%d\n",b);
A.330
B.100
C.74
D.以上答案都不对
标准答案: C
171. 问题:XXXX() 设有以下程序段,则值为 6 的表达式是: struct st { int n; struct st *next;};
static struct st a[3]={5,&a[1],7,&a[2],9,0 },*p; p=&a[0];
A.p++->n
B.'++p->n
C.p->n++
D.(*p).n++
标准答案: B
172. 问题:XXXX() 以下三条语句分别输出什么:
char str1[] = "abc";
char str2[] = "abc";
const char str3[] = "abc";
const char str4[] = "abc";
const char* str5 = "abc";
const char* str6 = "abc";
cout <<boolalpha << (str1==str2) <<endl; cout <<boolalpha << (str3==str4) <<endl;
cout <<boolalpha << (str5==str6) <<endl; A.true,true,true
B.false,true,true
C.false,false,true
D.false,false,false 标准答案: C
173. 问题:XXXX() 代码
void func()
{
static int val;
...
}中,变量 val 的内存地址位于: A.已初始化数据段 B.未初始化数据段
C.堆
D.栈
标准答案: A
174. 问题:XXXX() 下列程序输出结果是:
void max_out(int val1,int val2)
{
cout<<(val1>val2)?val1:val2;
}
int main() {
int ix=10,jx=20; cout<<"The larger of "<<ix; cout<<","<<jx<<" is "; max_out(ix,jx);
cout<<endl;
}
A.The larger of 10,20 is 10
B.The larger of 10,20 is 20
C.The larger of 10,20 is 0
D.The larger of 10,20 is 1
标准答案: C
175. 问题:XXXX()
已知结构变量的定义:
struct sl
{ int a[20];
double b;
}x;
使用 alloc 函数为变量 x 分配内存后需要进行地址类型转换的格式是 ____
A.(struct sl)
B.(struct sl *)
C.(double *)
D.(struct)
标准答案: B
176. 问题:XXXX()
Core 文件中有如下信息,一般可能是什么原因造成的: 0x900000001cc55bc
_p_raise(??) at 0x900000001cc4ff8 raise.raise(??) at 0x90000000007693c abort() at 0x9000000000a1c0c myabort__3stdFv() at 0x9000000003d01cc terminate__3stdFv() at 0x9000000003ce7c0 A.exception 没有捕获
B.堆溢出
C.栈溢出
D.内存越界
标准答案: A
177. 问题:XXXX() 编译中出现如下错误,一般解决办法是: Cannot create a
pthread_kill(??, ??) at
Error 537: "/opt/aCC/include_std/utility", line 99 #
'basic_string<char,std::char_traits<char>,std::allocator<char> >' object; class
basic_string<char,std::char_traits<char>,std::allocator<char> > has only been seen as an incomplete declaration.
first_type first; A.增加 include <string>
B.增加 include<std.h> C.增加 include<string.h> D.增加 using namespace std; 标准答案: A

￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼